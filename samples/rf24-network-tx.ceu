#include "arduino/arduino.ceu"
#include "wclock.ceu"
#include "spi.ceu"
#include "nrf24l01.ceu"
#include "rf24-network.ceu"
#include "pcint0.ceu"

{
    Serial.begin(9600);
    Serial.println("Ceu - helloworld_tx_2");
    _DELAY(20);
}

native/plain _payload_t;
native/pre do
    typedef struct payload_t {                 // Structure of our payload
        unsigned long ms;
        unsigned long counter;
    } payload_t;

    static RF24Network__Header header;        // If so, grab it and print it out
    static payload_t payload;
end

var Lock spi = _;
spawn Spi();

event bool irq;
spawn PCInt_to_Event(10, false, &irq);

var Nrf24l01_ nrf = val Nrf24l01_(&spi, &irq, 8,7, _,_,_,_,_,_,_);
spawn Nrf24l01(&nrf);
await nrf.ok;

var RF24Network_ net = val RF24Network_(&nrf,0,_,_,_,_,_,_,_);
spawn RF24Network(&net, 90);
await net.ok;

var u16 to = {011};

var int i;
loop i do
    if to == {01} then
        to = {011};
    else
        to = {01};
    end

    await 2s;

    { S.print("Sending #"); S.print(@net.tx_seqno); S.print("... "); }
    { _DELAY(20); }
    var _payload_t payload = { { @i+1, @i+1 } };
    var _RF24Network__Header header = _;
    header.to_node = to;
    var bool ok = await RF24Network_TX(&net, &&header,&&payload as byte&&,sizeof(payload));
    if ok then
        { S.println("ok!"); }
    else
        { S.println("no!"); }
    end
    { _DELAY(5); }
end
